using n64crc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Fast3D_Overwriter
{
    class Fast3D_Overwrite
    {
        private readonly string FAST3D_CODE = "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";
        private readonly string FAST3D_DATA = "AAAAAA9fEIAAAA9gAIcQAAAAD+gCHxdoAAASCAGXF2gAABOgAGcXaA/68AZ//wAAAAAAAQAC//9AAAAEBjMCAH////gACABAACCAAAHMzMwAAf//AAEAAQAB//8AAQABAAIAAgACAAIAAgACAAIAAgABAAAAAAABAAAAAQAAAAEAAQAAAAD//wAAAAEAAP//AAAAAAAB//8AAAAAAAEAARd0f/9XHToMAAEAAgEAAgBAAABAAAAXcAD///8TxBCoEfwTjBCoE9wQqBVYFWgQqBc0EKgQqBCoE4AThBN4E3AQqBNYE0gTKBLMEsQSoBKIElATDBIMF7wXwBgYGCwZZBeEF6AQWAAAAAAAAAAAAAAAAP//AAAAAO8IDP8AAAAAAAAAAAAAAAAAAAAAgAAAQAAAAAAAAAAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAAAAAAAAAAAAAIAAAACAAAB/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOABH/8ABAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUlNQIFNXIFZlcnNpb246IDIuMEQsIDA0LTAxLTk2AFNHSSBVNjQgR0ZYIFNXIFRFQU06IFMgQW5kZXJzb24sIFMgQ2FyciwgSCBDaGVuZywgSyBMdXN0ZXIsIFIgTW9vcmUsIE4gUG9vbGV5LCBBIFNyaW5pdmFzYW4KAAAAAAADIAGwAdAB8AIQAjACUAJwApACsALQATgD8AQABBAD4AEsAHABYAMwAf

        private readonly string FAST3D_MODDED_CODE = "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";
        private readonly string FAST3D_MODDED_DATA = "AAAAAA9nEIAAAA9oAIcQAAAAD/ACHxdwAAASEAGXF3AAABOoAGcXcA/68AZ//wAAAAAAAQAC//9AAAAEBjMCAH////gACABAACCAAAHMzMwAAf//AAEAAQAB//8AAQABAAIAAgACAAIAAgACAAIAAgABAAAAAAABAAAAAQAAAAEAAQAAAAD//wAAAAEAAP//AAAAAAAB//8AAAAAAAEAARd8f/9XHToMAAEAAgEAAgBAAABAAAAXeAD///8TzBCoEfwTlBCoE+QQqBVgFXAQqBc8EKj///+/E4gTjBOAE3gQqBNgE1ATMBLMEsQSoBKIElATFBIMF8QXyBggGDQZbBeMF6gQWAAAAAAAAAAAAAAAAP//AAAAAO8IDP8AAAAAAAAAAAAAAAAAAAAAgAAAQAAAAAAAAAAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAAAAAAAAAAAAAIAAAACAAAB/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOABH/8ABAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUlNQIFNXIFZlcnNpb246IDIuMEQsIDA0LTAxLTk2AFNHSSBVNjQgR0ZYIFNXIFRFQU06IFMgQW5kZXJzb24sIFMgQ2FyciwgSCBDaGVuZywgSyBMdXN0ZXIsIFIgTW9vcmUsIE4gUG9vbGV5LCBBIFNyaW5pdmFzYW4KAAAAAAADIAGwAdAB8AIQAjACUAJwApACsALQATgD8AQABBAD4AEsAHABYAMwAf


        byte[] fast3DCode, fast3DData, fast3DModdedCode, fast3DModdedData;

        public Fast3D_Overwrite()
        {
            fast3DCode = Convert.FromBase64String(FAST3D_CODE);
            fast3DData = Convert.FromBase64String(FAST3D_DATA);
            fast3DModdedCode = Convert.FromBase64String(FAST3D_MODDED_CODE);
            fast3DModdedData = Convert.FromBase64String(FAST3D_MODDED_DATA);
        }

        public void Overwrite(ref byte[] rom)
        {
            CheckROMEndianness(ref rom);

            int indexOfFast3DCode = FindSubArrayInArray16Aligned(fast3DCode, rom);
            int indexOfFast3DData = FindSubArrayInArray16Aligned(fast3DData, rom);

            if (indexOfFast3DCode != -1 && indexOfFast3DData != -1)
            {
                Console.WriteLine("Fast3D code at offset 0x" + indexOfFast3DCode.ToString("X8") +
                    ", data at offset 0x" + indexOfFast3DData.ToString("X8"));

                Array.Copy(fast3DModdedCode, 0, rom, indexOfFast3DCode, fast3DModdedCode.Length);
                Array.Copy(fast3DModdedData, 0, rom, indexOfFast3DData, fast3DModdedData.Length);

                N64CRC.CalculateROMChecksums(ref rom);
            }

        }

        private int FindSubArrayInArray16Aligned(byte[] sub, byte[] main)
        {
            if (sub.Length > main.Length)
            {
                throw new Exception("Sub array is larger than the main array!");
            }
            
            for (int i = 0; i < main.Length; i += 16)
            {
                int subIndex = 0;

                for (int j = i; j < main.Length; j++)
                {
                    if (main[j] == sub[subIndex])
                    {
                        subIndex++;
                        if (subIndex == sub.Length)
                        {
                            return i;
                        }
                    }
                    else
                    {
                        break;
                    }
                }
            }

            return -1;
        }

        public bool DoesROMHaveVanillaFast3D(byte[] rom)
        {
            int indexOfFast3DCode = FindSubArrayInArray16Aligned(fast3DCode, rom);
            int indexOfFast3DData = FindSubArrayInArray16Aligned(fast3DData, rom);

            return indexOfFast3DCode != -1 && indexOfFast3DData != -1;
        }

        public bool DoesROMHaveModdedFast3D(byte[] rom)
        {
            int indexOfFast3DModdedCode = FindSubArrayInArray16Aligned(fast3DModdedCode, rom);
            int indexOfFast3DModdedData = FindSubArrayInArray16Aligned(fast3DModdedData, rom);

            return indexOfFast3DModdedCode != -1 && indexOfFast3DModdedData != -1;
        }

        public void CheckROMEndianness(ref byte[] rom)
        {
            int endianness = DetermineN64RomEndianness(bytesToUint(rom, 0));

            if (endianness == 1)
            {
                MixedEndianToBigEndian(ref rom);
            }
            else if (endianness == 2)
            {
                LittleEndianToBigEndian(ref rom);
            }
        }

        private int DetermineN64RomEndianness(uint firstWord)
        {
            if (firstWord == 0x37804012)
            {
                return 1; // Mixed endian
            }
            else if (firstWord == 0x40123780)
            {
                return 2; // Little endian
            }

            return 0; // Big endian
        }

        private void MixedEndianToBigEndian(ref byte[] rom)
        {
            Console.WriteLine("Converting mixed endian to big endian!");

            for (int i = 0; i < rom.Length; i += 2)
            {
                // Swap bytes
                byte temp = rom[i];
                rom[i] = rom[i + 1];
                rom[i + 1] = temp;
            }
        }

        private void LittleEndianToBigEndian(ref byte[] rom)
        {
            Console.WriteLine("Converting little endian to big endian!");

            for (int i = 0; i < rom.Length; i += 4)
            {
                // Swap bytes
                byte byte0 = rom[i];
                byte byte1 = rom[i + 1];
                byte byte2 = rom[i + 2];
                byte byte3 = rom[i + 3];
                rom[i] = byte3;
                rom[i + 1] = byte2;
                rom[i + 2] = byte1;
                rom[i + 3] = byte0;
            }
        }

        private uint bytesToUint(byte[] rom, int offset)
        {
            return (uint)((rom[offset] << 24) | (rom[offset + 1] << 16) | (rom[offset + 2] << 8) | rom[offset + 3]);
        }
    }
}
